import { ECalendarValue } from '../../types/calendar-value-enum';
import { SingleCalendarValue } from '../../types/single-calendar-value';
import { Moment, unitOfTime } from 'moment';
import { CalendarValue } from '../../types/calendar-value';
import { IDate } from '../../models/date.model';
import { CalendarMode } from '../../types/calendar-mode';
import { DateValidator } from '../../types/validator.type';
import { ICalendarInternal } from '../../models/calendar.model';
import * as ɵngcc0 from '@angular/core';
export interface DateLimits {
    minDate?: SingleCalendarValue;
    maxDate?: SingleCalendarValue;
    minTime?: SingleCalendarValue;
    maxTime?: SingleCalendarValue;
}
export declare class UtilsService {
    static debounce(func: Function, wait: number): () => void;
    createArray(size: number): number[];
    convertToMoment(date: SingleCalendarValue, format: string): Moment;
    isDateValid(date: string, format: string): boolean;
    getDefaultDisplayDate(current: Moment, selected: Moment[], allowMultiSelect: boolean, minDate: Moment): Moment;
    getInputType(value: CalendarValue, allowMultiSelect: boolean): ECalendarValue;
    convertToMomentArray(value: CalendarValue, config: {
        allowMultiSelect?: boolean;
        format?: string;
    }): Moment[];
    convertFromMomentArray(format: string, value: Moment[], convertTo: ECalendarValue): CalendarValue;
    convertToString(value: CalendarValue, format: string): string;
    clearUndefined<T>(obj: T): T;
    updateSelected(isMultiple: boolean, currentlySelected: Moment[], date: IDate, granularity?: unitOfTime.Base): Moment[];
    closestParent(element: HTMLElement, selector: string): HTMLElement;
    onlyTime(m: Moment): Moment;
    granularityFromType(calendarType: CalendarMode): unitOfTime.Base;
    createValidator({ minDate, maxDate, minTime, maxTime }: DateLimits, format: string, calendarType: CalendarMode): DateValidator;
    datesStringToStringArray(value: string): string[];
    getValidMomentArray(value: string, format: string): Moment[];
    shouldShowCurrent(showGoToCurrent: boolean, mode: CalendarMode, min: Moment, max: Moment): boolean;
    isDateInRange(date: Moment, from: Moment, to: Moment): boolean;
    convertPropsToMoment(obj: {
        [key: string]: any;
    }, format: string, props: string[]): void;
    shouldResetCurrentView<T extends ICalendarInternal>(prevConf: T, currentConf: T): boolean;
    getNativeElement(elem: HTMLElement | string): HTMLElement;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UtilsService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ1dGlscy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVDYWxlbmRhclZhbHVlIH0gZnJvbSAnLi4vLi4vdHlwZXMvY2FsZW5kYXItdmFsdWUtZW51bSc7XG5pbXBvcnQgeyBTaW5nbGVDYWxlbmRhclZhbHVlIH0gZnJvbSAnLi4vLi4vdHlwZXMvc2luZ2xlLWNhbGVuZGFyLXZhbHVlJztcbmltcG9ydCB7IE1vbWVudCwgdW5pdE9mVGltZSB9IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBDYWxlbmRhclZhbHVlIH0gZnJvbSAnLi4vLi4vdHlwZXMvY2FsZW5kYXItdmFsdWUnO1xuaW1wb3J0IHsgSURhdGUgfSBmcm9tICcuLi8uLi9tb2RlbHMvZGF0ZS5tb2RlbCc7XG5pbXBvcnQgeyBDYWxlbmRhck1vZGUgfSBmcm9tICcuLi8uLi90eXBlcy9jYWxlbmRhci1tb2RlJztcbmltcG9ydCB7IERhdGVWYWxpZGF0b3IgfSBmcm9tICcuLi8uLi90eXBlcy92YWxpZGF0b3IudHlwZSc7XG5pbXBvcnQgeyBJQ2FsZW5kYXJJbnRlcm5hbCB9IGZyb20gJy4uLy4uL21vZGVscy9jYWxlbmRhci5tb2RlbCc7XG5leHBvcnQgaW50ZXJmYWNlIERhdGVMaW1pdHMge1xuICAgIG1pbkRhdGU/OiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIG1heERhdGU/OiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIG1pblRpbWU/OiBTaW5nbGVDYWxlbmRhclZhbHVlO1xuICAgIG1heFRpbWU/OiBTaW5nbGVDYWxlbmRhclZhbHVlO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVXRpbHNTZXJ2aWNlIHtcbiAgICBzdGF0aWMgZGVib3VuY2UoZnVuYzogRnVuY3Rpb24sIHdhaXQ6IG51bWJlcik6ICgpID0+IHZvaWQ7XG4gICAgY3JlYXRlQXJyYXkoc2l6ZTogbnVtYmVyKTogbnVtYmVyW107XG4gICAgY29udmVydFRvTW9tZW50KGRhdGU6IFNpbmdsZUNhbGVuZGFyVmFsdWUsIGZvcm1hdDogc3RyaW5nKTogTW9tZW50O1xuICAgIGlzRGF0ZVZhbGlkKGRhdGU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGdldERlZmF1bHREaXNwbGF5RGF0ZShjdXJyZW50OiBNb21lbnQsIHNlbGVjdGVkOiBNb21lbnRbXSwgYWxsb3dNdWx0aVNlbGVjdDogYm9vbGVhbiwgbWluRGF0ZTogTW9tZW50KTogTW9tZW50O1xuICAgIGdldElucHV0VHlwZSh2YWx1ZTogQ2FsZW5kYXJWYWx1ZSwgYWxsb3dNdWx0aVNlbGVjdDogYm9vbGVhbik6IEVDYWxlbmRhclZhbHVlO1xuICAgIGNvbnZlcnRUb01vbWVudEFycmF5KHZhbHVlOiBDYWxlbmRhclZhbHVlLCBjb25maWc6IHtcbiAgICAgICAgYWxsb3dNdWx0aVNlbGVjdD86IGJvb2xlYW47XG4gICAgICAgIGZvcm1hdD86IHN0cmluZztcbiAgICB9KTogTW9tZW50W107XG4gICAgY29udmVydEZyb21Nb21lbnRBcnJheShmb3JtYXQ6IHN0cmluZywgdmFsdWU6IE1vbWVudFtdLCBjb252ZXJ0VG86IEVDYWxlbmRhclZhbHVlKTogQ2FsZW5kYXJWYWx1ZTtcbiAgICBjb252ZXJ0VG9TdHJpbmcodmFsdWU6IENhbGVuZGFyVmFsdWUsIGZvcm1hdDogc3RyaW5nKTogc3RyaW5nO1xuICAgIGNsZWFyVW5kZWZpbmVkPFQ+KG9iajogVCk6IFQ7XG4gICAgdXBkYXRlU2VsZWN0ZWQoaXNNdWx0aXBsZTogYm9vbGVhbiwgY3VycmVudGx5U2VsZWN0ZWQ6IE1vbWVudFtdLCBkYXRlOiBJRGF0ZSwgZ3JhbnVsYXJpdHk/OiB1bml0T2ZUaW1lLkJhc2UpOiBNb21lbnRbXTtcbiAgICBjbG9zZXN0UGFyZW50KGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBzZWxlY3Rvcjogc3RyaW5nKTogSFRNTEVsZW1lbnQ7XG4gICAgb25seVRpbWUobTogTW9tZW50KTogTW9tZW50O1xuICAgIGdyYW51bGFyaXR5RnJvbVR5cGUoY2FsZW5kYXJUeXBlOiBDYWxlbmRhck1vZGUpOiB1bml0T2ZUaW1lLkJhc2U7XG4gICAgY3JlYXRlVmFsaWRhdG9yKHsgbWluRGF0ZSwgbWF4RGF0ZSwgbWluVGltZSwgbWF4VGltZSB9OiBEYXRlTGltaXRzLCBmb3JtYXQ6IHN0cmluZywgY2FsZW5kYXJUeXBlOiBDYWxlbmRhck1vZGUpOiBEYXRlVmFsaWRhdG9yO1xuICAgIGRhdGVzU3RyaW5nVG9TdHJpbmdBcnJheSh2YWx1ZTogc3RyaW5nKTogc3RyaW5nW107XG4gICAgZ2V0VmFsaWRNb21lbnRBcnJheSh2YWx1ZTogc3RyaW5nLCBmb3JtYXQ6IHN0cmluZyk6IE1vbWVudFtdO1xuICAgIHNob3VsZFNob3dDdXJyZW50KHNob3dHb1RvQ3VycmVudDogYm9vbGVhbiwgbW9kZTogQ2FsZW5kYXJNb2RlLCBtaW46IE1vbWVudCwgbWF4OiBNb21lbnQpOiBib29sZWFuO1xuICAgIGlzRGF0ZUluUmFuZ2UoZGF0ZTogTW9tZW50LCBmcm9tOiBNb21lbnQsIHRvOiBNb21lbnQpOiBib29sZWFuO1xuICAgIGNvbnZlcnRQcm9wc1RvTW9tZW50KG9iajoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfSwgZm9ybWF0OiBzdHJpbmcsIHByb3BzOiBzdHJpbmdbXSk6IHZvaWQ7XG4gICAgc2hvdWxkUmVzZXRDdXJyZW50VmlldzxUIGV4dGVuZHMgSUNhbGVuZGFySW50ZXJuYWw+KHByZXZDb25mOiBULCBjdXJyZW50Q29uZjogVCk6IGJvb2xlYW47XG4gICAgZ2V0TmF0aXZlRWxlbWVudChlbGVtOiBIVE1MRWxlbWVudCB8IHN0cmluZyk6IEhUTUxFbGVtZW50O1xufVxuIl19