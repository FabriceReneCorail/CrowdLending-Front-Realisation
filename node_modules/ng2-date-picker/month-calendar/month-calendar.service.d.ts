import { Moment } from 'moment';
import { UtilsService } from '../common/services/utils/utils.service';
import { IMonth } from './month.model';
import { IMonthCalendarConfig, IMonthCalendarConfigInternal } from './month-calendar-config';
import * as ɵngcc0 from '@angular/core';
export declare class MonthCalendarService {
    private utilsService;
    readonly DEFAULT_CONFIG: IMonthCalendarConfigInternal;
    constructor(utilsService: UtilsService);
    getConfig(config: IMonthCalendarConfig): IMonthCalendarConfigInternal;
    generateYear(config: IMonthCalendarConfig, year: Moment, selected?: Moment[]): IMonth[][];
    isMonthDisabled(date: Moment, config: IMonthCalendarConfig): boolean;
    shouldShowLeft(min: Moment, currentMonthView: Moment): boolean;
    shouldShowRight(max: Moment, currentMonthView: Moment): boolean;
    getHeaderLabel(config: IMonthCalendarConfig, year: Moment): string;
    getMonthBtnText(config: IMonthCalendarConfig, month: Moment): string;
    getMonthBtnCssClass(config: IMonthCalendarConfig, month: Moment): string;
    private validateConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MonthCalendarService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MonthCalendarService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtY2FsZW5kYXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJtb250aC1jYWxlbmRhci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB7IFV0aWxzU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9zZXJ2aWNlcy91dGlscy91dGlscy5zZXJ2aWNlJztcbmltcG9ydCB7IElNb250aCB9IGZyb20gJy4vbW9udGgubW9kZWwnO1xuaW1wb3J0IHsgSU1vbnRoQ2FsZW5kYXJDb25maWcsIElNb250aENhbGVuZGFyQ29uZmlnSW50ZXJuYWwgfSBmcm9tICcuL21vbnRoLWNhbGVuZGFyLWNvbmZpZyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNb250aENhbGVuZGFyU2VydmljZSB7XG4gICAgcHJpdmF0ZSB1dGlsc1NlcnZpY2U7XG4gICAgcmVhZG9ubHkgREVGQVVMVF9DT05GSUc6IElNb250aENhbGVuZGFyQ29uZmlnSW50ZXJuYWw7XG4gICAgY29uc3RydWN0b3IodXRpbHNTZXJ2aWNlOiBVdGlsc1NlcnZpY2UpO1xuICAgIGdldENvbmZpZyhjb25maWc6IElNb250aENhbGVuZGFyQ29uZmlnKTogSU1vbnRoQ2FsZW5kYXJDb25maWdJbnRlcm5hbDtcbiAgICBnZW5lcmF0ZVllYXIoY29uZmlnOiBJTW9udGhDYWxlbmRhckNvbmZpZywgeWVhcjogTW9tZW50LCBzZWxlY3RlZD86IE1vbWVudFtdKTogSU1vbnRoW11bXTtcbiAgICBpc01vbnRoRGlzYWJsZWQoZGF0ZTogTW9tZW50LCBjb25maWc6IElNb250aENhbGVuZGFyQ29uZmlnKTogYm9vbGVhbjtcbiAgICBzaG91bGRTaG93TGVmdChtaW46IE1vbWVudCwgY3VycmVudE1vbnRoVmlldzogTW9tZW50KTogYm9vbGVhbjtcbiAgICBzaG91bGRTaG93UmlnaHQobWF4OiBNb21lbnQsIGN1cnJlbnRNb250aFZpZXc6IE1vbWVudCk6IGJvb2xlYW47XG4gICAgZ2V0SGVhZGVyTGFiZWwoY29uZmlnOiBJTW9udGhDYWxlbmRhckNvbmZpZywgeWVhcjogTW9tZW50KTogc3RyaW5nO1xuICAgIGdldE1vbnRoQnRuVGV4dChjb25maWc6IElNb250aENhbGVuZGFyQ29uZmlnLCBtb250aDogTW9tZW50KTogc3RyaW5nO1xuICAgIGdldE1vbnRoQnRuQ3NzQ2xhc3MoY29uZmlnOiBJTW9udGhDYWxlbmRhckNvbmZpZywgbW9udGg6IE1vbWVudCk6IHN0cmluZztcbiAgICBwcml2YXRlIHZhbGlkYXRlQ29uZmlnO1xufVxuIl19