import { EventEmitter } from '@angular/core';
import { IDatePickerConfig, IDatePickerConfigInternal } from './date-picker-config.model';
import { Moment } from 'moment';
import { UtilsService } from '../common/services/utils/utils.service';
import { IDayCalendarConfig } from '../day-calendar/day-calendar-config.model';
import { TimeSelectService } from '../time-select/time-select.service';
import { DayTimeCalendarService } from '../day-time-calendar/day-time-calendar.service';
import { ITimeSelectConfig } from '../time-select/time-select-config.model';
import { CalendarMode } from '../common/types/calendar-mode';
import * as ɵngcc0 from '@angular/core';
export declare class DatePickerService {
    private utilsService;
    private timeSelectService;
    private daytimeCalendarService;
    readonly onPickerClosed: EventEmitter<null>;
    private defaultConfig;
    constructor(utilsService: UtilsService, timeSelectService: TimeSelectService, daytimeCalendarService: DayTimeCalendarService);
    getConfig(config: IDatePickerConfig, mode?: CalendarMode): IDatePickerConfigInternal;
    getDayConfigService(pickerConfig: IDatePickerConfig): IDayCalendarConfig;
    getDayTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;
    getTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;
    pickerClosed(): void;
    isValidInputDateValue(value: string, config: IDatePickerConfig): boolean;
    convertInputValueToMomentArray(value: string, config: IDatePickerConfig): Moment[];
    private getDefaultFormatByMode;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DatePickerService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DatePickerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJkYXRlLXBpY2tlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElEYXRlUGlja2VyQ29uZmlnLCBJRGF0ZVBpY2tlckNvbmZpZ0ludGVybmFsIH0gZnJvbSAnLi9kYXRlLXBpY2tlci1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB7IFV0aWxzU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9zZXJ2aWNlcy91dGlscy91dGlscy5zZXJ2aWNlJztcbmltcG9ydCB7IElEYXlDYWxlbmRhckNvbmZpZyB9IGZyb20gJy4uL2RheS1jYWxlbmRhci9kYXktY2FsZW5kYXItY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IFRpbWVTZWxlY3RTZXJ2aWNlIH0gZnJvbSAnLi4vdGltZS1zZWxlY3QvdGltZS1zZWxlY3Quc2VydmljZSc7XG5pbXBvcnQgeyBEYXlUaW1lQ2FsZW5kYXJTZXJ2aWNlIH0gZnJvbSAnLi4vZGF5LXRpbWUtY2FsZW5kYXIvZGF5LXRpbWUtY2FsZW5kYXIuc2VydmljZSc7XG5pbXBvcnQgeyBJVGltZVNlbGVjdENvbmZpZyB9IGZyb20gJy4uL3RpbWUtc2VsZWN0L3RpbWUtc2VsZWN0LWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBDYWxlbmRhck1vZGUgfSBmcm9tICcuLi9jb21tb24vdHlwZXMvY2FsZW5kYXItbW9kZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlUGlja2VyU2VydmljZSB7XG4gICAgcHJpdmF0ZSB1dGlsc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSB0aW1lU2VsZWN0U2VydmljZTtcbiAgICBwcml2YXRlIGRheXRpbWVDYWxlbmRhclNlcnZpY2U7XG4gICAgcmVhZG9ubHkgb25QaWNrZXJDbG9zZWQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICBwcml2YXRlIGRlZmF1bHRDb25maWc7XG4gICAgY29uc3RydWN0b3IodXRpbHNTZXJ2aWNlOiBVdGlsc1NlcnZpY2UsIHRpbWVTZWxlY3RTZXJ2aWNlOiBUaW1lU2VsZWN0U2VydmljZSwgZGF5dGltZUNhbGVuZGFyU2VydmljZTogRGF5VGltZUNhbGVuZGFyU2VydmljZSk7XG4gICAgZ2V0Q29uZmlnKGNvbmZpZzogSURhdGVQaWNrZXJDb25maWcsIG1vZGU/OiBDYWxlbmRhck1vZGUpOiBJRGF0ZVBpY2tlckNvbmZpZ0ludGVybmFsO1xuICAgIGdldERheUNvbmZpZ1NlcnZpY2UocGlja2VyQ29uZmlnOiBJRGF0ZVBpY2tlckNvbmZpZyk6IElEYXlDYWxlbmRhckNvbmZpZztcbiAgICBnZXREYXlUaW1lQ29uZmlnU2VydmljZShwaWNrZXJDb25maWc6IElEYXRlUGlja2VyQ29uZmlnKTogSVRpbWVTZWxlY3RDb25maWc7XG4gICAgZ2V0VGltZUNvbmZpZ1NlcnZpY2UocGlja2VyQ29uZmlnOiBJRGF0ZVBpY2tlckNvbmZpZyk6IElUaW1lU2VsZWN0Q29uZmlnO1xuICAgIHBpY2tlckNsb3NlZCgpOiB2b2lkO1xuICAgIGlzVmFsaWRJbnB1dERhdGVWYWx1ZSh2YWx1ZTogc3RyaW5nLCBjb25maWc6IElEYXRlUGlja2VyQ29uZmlnKTogYm9vbGVhbjtcbiAgICBjb252ZXJ0SW5wdXRWYWx1ZVRvTW9tZW50QXJyYXkodmFsdWU6IHN0cmluZywgY29uZmlnOiBJRGF0ZVBpY2tlckNvbmZpZyk6IE1vbWVudFtdO1xuICAgIHByaXZhdGUgZ2V0RGVmYXVsdEZvcm1hdEJ5TW9kZTtcbn1cbiJdfQ==