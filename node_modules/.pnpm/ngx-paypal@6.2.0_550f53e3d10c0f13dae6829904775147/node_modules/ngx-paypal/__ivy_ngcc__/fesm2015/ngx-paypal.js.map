{"version":3,"file":"ngx-paypal.js","sources":["../../src/lib/services/script.service.ts","../../src/lib/services/paypal-script.service.ts","../../src/lib/components/paypal.component.ts","../../src/lib/ngx-paypal.module.ts","../../src/lib/models/paypal-models.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n    }\r\n\r\n    registerScript(url: string, globalVar: string, onReady: (globalVar: any) => void): void {\r\n        const existingGlobalVar = (window as any)[globalVar];\r\n        if (existingGlobalVar) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run(() => {\r\n                onReady(existingGlobalVar);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        // prepare script elem\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = () => {\r\n            this.zone.run(() => {\r\n                onReady((window as any)[globalVar]);\r\n            });\r\n        };\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n\r\n    cleanup(globalVar: string): void {\r\n        // remove script from DOM\r\n        const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n\r\n        if (scriptElem) {\r\n            scriptElem.remove();\r\n        }\r\n    }\r\n\r\n    private getElemId(globalVar: string): string {\r\n        return `ngx-paypal-script-elem-${globalVar}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IPayPalUrlConfig, IQueryParam } from '../models/paypal-models';\r\nimport { ScriptService } from './script.service';\r\n\r\n@Injectable()\r\nexport class PayPalScriptService {\r\n\r\n    private readonly paypalWindowName = 'paypal';\r\n\r\n\r\n    constructor(\r\n        protected scriptService: ScriptService,\r\n    ) {\r\n    }\r\n\r\n    registerPayPalScript(config: IPayPalUrlConfig, onReady: (payPalApi: any) => void): void {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    }\r\n\r\n    destroyPayPalScript(): void {\r\n        this.scriptService.cleanup(this.paypalWindowName);\r\n    }\r\n\r\n    private getUrlForConfig(config: IPayPalUrlConfig): string {\r\n        const params: IQueryParam[] = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n\r\n        if (config.vault) {\r\n            params.push({\r\n                name: 'vault',\r\n                value: config.vault\r\n            });\r\n        }\r\n\r\n        if (config.extraParams) {\r\n            params.push(...config.extraParams);\r\n        }\r\n\r\n        return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n    }\r\n\r\n    private getQueryString(queryParams: IQueryParam[]): string {\r\n        let queryString = '';\r\n\r\n        for (let i = 0; i < queryParams.length; i++) {\r\n            const queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            } else {\r\n                queryString += '&';\r\n            }\r\n\r\n            queryString += `${queryParam.name}=${queryParam.value}`;\r\n        }\r\n\r\n        return queryString;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    ICancelCallbackData,\r\n    IClientAuthorizeCallbackData,\r\n    ICreateOrderCallbackActions,\r\n    IInitCallbackData,\r\n    IOnApproveCallbackActions,\r\n    IOnApproveCallbackData,\r\n    IOnClickCallbackActions,\r\n    IOnInitCallbackActions,\r\n    IOnShippingChangeActions,\r\n    IOnShippingChangeData,\r\n    IPayPalConfig,\r\n    ICreateSubscriptionCallbackActions,\r\n    ICreateSubscriptionCallbackData,\r\n} from '../models/paypal-models';\r\nimport { PayPalScriptService } from '../services/paypal-script.service';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-paypal',\r\n    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n})\r\nexport class NgxPaypalComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Configuration for paypal.\r\n     */\r\n    @Input() config?: IPayPalConfig;\r\n\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     */\r\n    @Input() registerScript: boolean = true;\r\n\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     */\r\n    @Output() scriptLoaded = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     */\r\n    public payPalButtonContainerId?: string;\r\n\r\n    private readonly ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n    private payPalButtonContainerElem?: ElementRef;\r\n    @ViewChild('payPalButtonContainer', { static: false }) set payPalButtonContainer(content: ElementRef) {\r\n        this.payPalButtonContainerElem = content;\r\n    }\r\n\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     */\r\n    private initializePayPal: boolean = true;\r\n\r\n    /**\r\n     * Reference to PayPal global API\r\n     */\r\n    private payPal: any;\r\n\r\n    constructor(\r\n        private paypalScriptService: PayPalScriptService,\r\n        private cdr: ChangeDetectorRef,\r\n        private ngZone: NgZone\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n\r\n        // first time config setup\r\n        const config = this.config;\r\n\r\n        if (changes.config.isFirstChange()) {\r\n            if (config && this.registerScript) {\r\n                this.initPayPalScript(config, (payPal) => {\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            }\r\n        }\r\n\r\n        // changes to config\r\n        if (!changes.config.isFirstChange()) {\r\n            this.reinitialize(config);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    customInit(payPal: any): void {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    reinitialize(config: IPayPalConfig | undefined): void {\r\n        this.config = config;\r\n        this.payPal = undefined;\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.payPalButtonContainerId = this.generateElementId();\r\n        this.initializePayPal = true;\r\n\r\n        if (this.payPalButtonContainerElem) {\r\n            while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n            }\r\n        }\r\n\r\n        this.cdr.detectChanges();\r\n\r\n        if (this.config) {\r\n            if (!this.payPal) {\r\n                this.initPayPalScript(this.config, (payPal) => {\r\n\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                });\r\n            } else {\r\n                this.doPayPalCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private doPayPalCheck(): void {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initPayPalScript(config: IPayPalConfig, initPayPal: (paypal: any) => void): void {\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            vault: config.vault,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (paypal) => {\r\n            this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        });\r\n    }\r\n\r\n    private generateElementId(): string {\r\n        return `ngx-captcha-id-${new Date().valueOf()}`;\r\n    }\r\n\r\n    private initPayPal(config: IPayPalConfig, paypal: any): void {\r\n        // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n            const createOrder = (data: any, actions: ICreateOrderCallbackActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                        throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                    }\r\n\r\n                    if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                        throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                    }\r\n\r\n                    if (config.createOrderOnClient) {\r\n                        return actions.order.create(config.createOrderOnClient(data));\r\n                    }\r\n\r\n                    if (config.createOrderOnServer) {\r\n                        return config.createOrderOnServer(data);\r\n                    }\r\n\r\n                    throw Error(`Invalid state for 'createOrder'.`);\r\n                });\r\n            };\r\n            const createSubscription = (data: ICreateSubscriptionCallbackData, actions: ICreateSubscriptionCallbackActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.createSubscription) {\r\n                        return config.createSubscription(data, actions);\r\n                    }\r\n                });\r\n            };\r\n            const onShippingChange = (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => {\r\n                return this.ngZone.run(() => {\r\n                    if (config.onShippingChange) {\r\n                        return config.onShippingChange(data, actions);\r\n                    }\r\n                });\r\n            };\r\n            const buttonsConfig = {\r\n                style: config.style,\r\n                onApprove: (data: IOnApproveCallbackData, actions: IOnApproveCallbackActions) => {\r\n                    return this.ngZone.run(() => {\r\n                        if (config.onApprove) {\r\n                            config.onApprove(data, actions);\r\n                        }\r\n\r\n                        // capture on server\r\n                        if (config.authorizeOnServer) {\r\n                            return config.authorizeOnServer(data, actions);\r\n                        }\r\n\r\n                        // capture on client\r\n                        const onClientAuthorization = config.onClientAuthorization;\r\n                        if (onClientAuthorization) {\r\n                            actions.order.capture().then((details: IClientAuthorizeCallbackData) => {\r\n                                this.ngZone.run(() => {\r\n                                    onClientAuthorization(details);\r\n                                });\r\n                            });\r\n                            return;\r\n                        }\r\n                    });\r\n                },\r\n                onError: (error: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onError) {\r\n                            config.onError(error);\r\n                        }\r\n                    });\r\n                },\r\n                onCancel: (data: ICancelCallbackData, actions: any) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onCancel) {\r\n                            config.onCancel(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onClick: (data: any, actions: IOnClickCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onClick) {\r\n                            config.onClick(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                onInit: (data: IInitCallbackData, actions: IOnInitCallbackActions) => {\r\n                    this.ngZone.run(() => {\r\n                        if (config.onInit) {\r\n                            config.onInit(data, actions);\r\n                        }\r\n                    });\r\n                },\r\n                // Add the functions if they've been created in the config object\r\n                // The API only allows one of the two to be set\r\n                ...((config.createOrderOnClient || config.createOrderOnServer) && { createOrder }),\r\n                ...(config.createSubscription && { createSubscription }),\r\n                // The onShippingChange callback cannot be used with subscriptions\r\n                // so we only add it if it is set\r\n                ...(config.onShippingChange && { onShippingChange })\r\n            };\r\n            paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n        });\r\n    }\r\n}\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgxPaypalComponent } from './components/paypal.component';\r\nimport { ScriptService } from './services/script.service';\r\nimport { PayPalScriptService } from './services/paypal-script.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  exports: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    PayPalScriptService\r\n  ]\r\n})\r\nexport class NgxPayPalModule {\r\n}\r\n\r\n\r\n","\r\nexport interface IPayPalConfig {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     */\r\n    currency?: string;\r\n\r\n    /**\r\n    * Use when creating order on client\r\n    */\r\n    createOrderOnClient?: (data: any) => ICreateOrderRequest;\r\n\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     */\r\n    createOrderOnServer?: (data: any) => Promise<string>;\r\n\r\n    /**\r\n     * Advanced configuration\r\n     */\r\n    advanced?: IAdvancedConfiguration;\r\n\r\n    /**\r\n     * Client id\r\n     */\r\n    clientId: string;\r\n\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     */\r\n    onShippingChange?: OnShippingChangeCallback;\r\n\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     */\r\n    onApprove?: (data: IOnApproveCallbackData, actions: any) => void;\r\n\r\n    /**\r\n    * Called when authorization on client succeeds\r\n    */\r\n    onClientAuthorization?: (authorization: IClientAuthorizeCallbackData) => void;\r\n\r\n    /**\r\n     * Implement for authorizing on server side\r\n     */\r\n    authorizeOnServer?: (data: IOnApproveCallbackData, actions: any) => Promise<any>;\r\n\r\n    /**\r\n     * Button style configuration\r\n     */\r\n    style?: IPayPalButtonStyle;\r\n\r\n    /**\r\n     * Error handler\r\n     */\r\n    onError?: (err: any) => void;\r\n\r\n    /**\r\n     * Click handler\r\n     */\r\n    onClick?: (data: any, actions: IOnClickCallbackActions) => void;\r\n\r\n    /**\r\n     * Cancel handler\r\n     */\r\n    onCancel?: (data: ICancelCallbackData, actions: any) => void;\r\n\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     */\r\n    onInit?: (data: IInitCallbackData, actions: IOnInitCallbackActions) => void;\r\n\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     */\r\n    createSubscription?: (data: ICreateSubscriptionCallbackData, actions: ICreateSubscriptionCallbackActions) => void;\r\n\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     */\r\n    vault?: TrueFalse;\r\n}\r\n\r\nexport type TrueFalse = 'true' | 'false';\r\n\r\nexport interface IPayPalUrlConfig {\r\n    clientId: string;\r\n    currency?: string;\r\n    commit?: TrueFalse;\r\n    vault?: TrueFalse;\r\n    extraParams?: IQueryParam[];\r\n}\r\n\r\nexport interface IOrderDetails {\r\n    create_time: string;\r\n    update_time: string;\r\n    id: string;\r\n    intent: OrderIntent;\r\n    payer: IPayer;\r\n    status: OrderStatus;\r\n    links: ILinkDescription[];\r\n    purchase_units: IPurchaseUnit[];\r\n}\r\n\r\nexport interface IClientAuthorizeCallbackData extends IOrderDetails {\r\n    links: ILinkDescription[];\r\n}\r\n\r\nexport interface ILinkDescription {\r\n    href: string;\r\n    rel: String;\r\n    method?: LinkMethod;\r\n}\r\n\r\nexport interface IQueryParam {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport type OnShippingChangeCallback = (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => any;\r\n\r\nexport interface IOnShippingChangeData {\r\n    paymentToken: string;\r\n    shipping_address: any;\r\n    selected_shipping_method?: any;\r\n}\r\n\r\nexport interface IOnShippingChangeActions {\r\n    resolve: () => any;\r\n    reject: () => any;\r\n    patch: () => any;\r\n}\r\n\r\nexport type LinkMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD' | 'CONNECT' | 'OPTIONS' | 'PATCH';\r\n\r\nexport interface IAdvancedConfiguration {\r\n    commit?: TrueFalse;\r\n    extraQueryParams?: IQueryParam[];\r\n}\r\n\r\nexport interface IOnApproveCallbackData {\r\n    orderID: string;\r\n    payerID: string;\r\n    subscriptionID: string;\r\n}\r\n\r\nexport interface ICreateOrderCallbackActions {\r\n    order: {\r\n        create: (order: ICreateOrderRequest) => Promise<any>;\r\n    };\r\n}\r\n\r\nexport interface ICancelCallbackData {\r\n    orderID: string;\r\n}\r\n\r\nexport interface IOnApproveCallbackActions {\r\n    redirect: () => void;\r\n    restart: () => void;\r\n    order: {\r\n        authorize: () => Promise<any>;\r\n        capture: () => Promise<any>;\r\n        get: () => Promise<IOrderDetails>;\r\n        patch: () => Promise<any>;\r\n    };\r\n}\r\n\r\nexport interface IOnInitCallbackActions {\r\n    enable: () => void;\r\n    disable: () => void;\r\n}\r\n\r\nexport interface ICreateSubscriptionCallbackActions {\r\n    subscription: {\r\n        create: (subscription: ICreateSubscriptionRequest) => Promise<any>;\r\n    };\r\n}\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IInitCallbackData {\r\n}\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface ICreateSubscriptionCallbackData {\r\n}\r\n\r\nexport interface IOnClickCallbackActions {\r\n    resolve: () => void;\r\n    reject: () => void;\r\n}\r\n\r\nexport interface IPayPalButtonStyle {\r\n    label?: 'paypal' | 'checkout' | 'pay' | 'installment' | 'buynow';\r\n    size?: 'small' | 'medium' | 'large' | 'responsive';\r\n    shape?: 'pill' | 'rect';\r\n    color?: 'gold' | 'blue' | 'silver' | 'white' | 'black';\r\n    layout?: 'horizontal' | 'vertical';\r\n    tagline?: boolean;\r\n    height?: number;\r\n}\r\n\r\nexport interface ICreateOrderRequest {\r\n    intent: OrderIntent;\r\n    purchase_units: IPurchaseUnit[];\r\n\r\n    payer?: IPayer;\r\n    application_context?: IApplicationContext;\r\n\r\n}\r\n\r\nexport interface ICreateSubscriptionRequest {\r\n    plan_id: string;\r\n    quantity?: number;\r\n}\r\n\r\nexport interface IPayer {\r\n    name?: IPartyName;\r\n    email_address?: string;\r\n    payer_id?: string;\r\n    birth_date?: string;\r\n    tax_info?: ITaxInfo;\r\n    address?: IAddressPortable;\r\n}\r\n\r\nexport interface IApplicationContext {\r\n    brand_name?: string;\r\n    locale?: string;\r\n    landing_page?: PaypalLandingPage;\r\n    shipping_preference?: ShippingPreference;\r\n    user_action?: PayPalUserAction;\r\n    payment_method?: IPaymentMethod;\r\n    return_url?: string;\r\n    cancel_url?: string;\r\n}\r\n\r\nexport interface IPaymentMethod {\r\n    payer_selected?: PayerSelected;\r\n    payee_preferred?: PayeePreferred;\r\n}\r\n\r\nexport type PayeePreferred = 'UNRESTRICTED' | 'IMMEDIATE_PAYMENT_REQUIRED';\r\n\r\nexport type PayerSelected = 'PAYPAL_CREDIT' | 'PAYPAL';\r\n\r\nexport type PayPalUserAction = 'CONTINUE' | 'PAY_NOW';\r\n\r\nexport type ShippingPreference = 'GET_FROM_FILE' | 'NO_SHIPPING' | 'SET_PROVIDED_ADDRESS';\r\n\r\nexport type PaypalLandingPage = 'LOGIN' | 'BILLING';\r\n\r\nexport type OrderIntent = 'CAPTURE' | 'AUTHORIZE';\r\n\r\nexport type DisbursementMode = 'INSTANT' | 'DELAYED';\r\n\r\nexport type ItemCategory = 'DIGITAL_GOODS' | 'PHYSICAL_GOODS';\r\n\r\nexport type PhoneType = 'FAX' | 'HOME' | 'MOBILE' | 'OTHER' | 'PAGER';\r\n\r\nexport type TaxIdType = 'BR_CPF' | 'BR_CNPJ';\r\n\r\nexport interface IPhone {\r\n    phone_type?: PhoneType;\r\n    phone_number?: IPhoneNumber;\r\n}\r\n\r\nexport interface ITaxInfo {\r\n    tax_id: string;\r\n    tax_id_type: TaxIdType;\r\n}\r\n\r\nexport interface IPhoneNumber {\r\n    national_number: string;\r\n}\r\n\r\nexport interface IPurchaseUnit {\r\n    amount: IUnitAmount;\r\n\r\n    reference_id?: string;\r\n    payee?: IPayee;\r\n    payment_instruction?: IPaymentInstructions;\r\n    description?: string;\r\n    custom_id?: string;\r\n    invoice_id?: string;\r\n    soft_descriptor?: string;\r\n    items: ITransactionItem[];\r\n    shipping?: IShipping;\r\n}\r\n\r\nexport interface IPayee {\r\n    email_address?: string;\r\n    merchant_id?: string;\r\n}\r\n\r\nexport interface IPaymentInstructions {\r\n    platform_fees?: IPlatformFee[];\r\n    disbursement_mode?: DisbursementMode;\r\n}\r\n\r\nexport interface IPlatformFee {\r\n    amount: IUnitAmount;\r\n    payee?: IPayee;\r\n}\r\n\r\nexport interface ITransactionItem {\r\n    name: string;\r\n    unit_amount: IUnitAmount;\r\n    quantity: string;\r\n\r\n    description?: string;\r\n    sku?: string;\r\n    category?: ItemCategory;\r\n    tax?: ITax;\r\n}\r\n\r\nexport interface ITax {\r\n    currency_code: string;\r\n    value: string;\r\n}\r\n\r\nexport interface IUnitAmount {\r\n    currency_code: string;\r\n    value: string;\r\n    breakdown?: IUnitBreakdown;\r\n}\r\n\r\nexport interface IMoney {\r\n    currency_code: string;\r\n    value: string;\r\n}\r\n\r\nexport interface IUnitBreakdown {\r\n    item_total?: IUnitAmount;\r\n    shipping?: IUnitAmount;\r\n    handling?: IUnitAmount;\r\n    tax_total?: IUnitAmount;\r\n    insurance?: IUnitAmount;\r\n    shipping_discount?: IUnitAmount;\r\n    discount?: IMoney;\r\n}\r\n\r\nexport interface IPartyName {\r\n    prefix?: string;\r\n    given_name?: string;\r\n    surname?: string;\r\n    middle_name?: string;\r\n    suffix?: string;\r\n    alternate_full_name?: string;\r\n    full_name?: string;\r\n}\r\n\r\nexport interface IAddressPortable {\r\n    country_code: string;\r\n\r\n    address_line_1?: string;\r\n    address_line_2?: string;\r\n    admin_area_2?: string;\r\n    admin_area_1?: string;\r\n    postal_code?: string;\r\n}\r\n\r\nexport interface IShipping {\r\n    name?: IPartyName;\r\n    address?: IAddressPortable;\r\n}\r\n\r\nexport type OrderStatus = 'APPROVED' | 'SAVED' | 'CREATED' | 'VOIDED' | 'COMPLETED';\r\n\r\n\r\n"]}