/* All schemas interfaces must have a required and different `type`,
 * to create a TypeScript discriminant union type.
 * Avoid https://github.com/cyrilletuzi/angular-async-local-storage/issues/64 */
//# sourceMappingURL=data:application/json;base64,